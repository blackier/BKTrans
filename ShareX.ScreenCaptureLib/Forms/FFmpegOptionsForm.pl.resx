<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Testuj z CMD</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>Odśwież</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Opcje nagrywania ekranu</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>Kopiuj</value>
  </data>
  <data name="lblAMFQuality.Text" xml:space="preserve">
    <value>Jakość:</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>Jakość:</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>Zainstaluj urządzenia nagrywające</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>Pobierz</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>Jakość:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>Źródło wideo:</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>Bitrate:</value>
  </data>
  <data name="lblOpusQuality.Text" xml:space="preserve">
    <value>Bitrate:</value>
  </data>
  <data name="lblNVENCBitrate.Text" xml:space="preserve">
    <value>Bitrate:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>Kodek audio:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>Źródło audio:</value>
  </data>
  <data name="lblAMFUsage.Text" xml:space="preserve">
    <value>Użycie:</value>
  </data>
  <data name="cbx264UseBitrate.Text" xml:space="preserve">
    <value>Użyj bitrate</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>Instaluje "screen-capture-recorder"i "virtual-audio-capturer" źródło wideo/audio.</value>
  </data>
  <data name="lblFFmpegPath.Text" xml:space="preserve">
    <value>Ścieżka FFmpeg:</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>Tryb palety:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>Tryb ditheringu:</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>Bitrate:</value>
  </data>
  <data name="lblQSVBitrate.Text" xml:space="preserve">
    <value>Bitrate:</value>
  </data>
  <data name="lblCommandLinePreview.Text" xml:space="preserve">
    <value>Podgląd wiersza poleceń:</value>
  </data>
  <data name="lblNVENCPreset.Text" xml:space="preserve">
    <value>Preset:</value>
  </data>
  <data name="lblQSVPreset.Text" xml:space="preserve">
    <value>Preset:</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>Preset:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>Zmienny bitrate:</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>Użyj własnych poleceń</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>Kodek wideo:</value>
  </data>
  <data name="lblCommandLineArgs.Text" xml:space="preserve">
    <value>Dodatkowe argumenty wiersza poleceń:</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>Dla enkodowania w czasie rzeczywistym, jak np. nagrywanie ekranu, zalecane jest wybranie presetu tak szybko, jak to możliwe.
W przeciwnym razie nie będzie w stanie nadążyć za nagrywaniem i nastąpi wiele spadków klatek.</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>Szybszy preset = Szybsze kodowanie, ale większy rozmiar pliku.
Wolniejszy preset = Wolniejsze kodowanie, ale mniejszy rozmiar pliku.
W przypadku enkodowania w czasie rzeczywistym (np. nagrywanie ekranu), ustawienie presetu musi być tak szybkie, jak to możliwe.</value>
  </data>
  <data name="nudGIFBayerScale.ToolTip" xml:space="preserve">
    <value>Kontroluje indeks skali Bayera, wyższa skala spowoduje wyświetlenie większej liczby pasm. Wartość domyślna to 2.</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>Constant Rate Factor (CRF): Wartość może zawierać się w przedziale 0-51, gdzie 0 oznacza bezstratność, 30 to wartość domyślna, a 51 to najgorsza z możliwych.
Wyższa wartość oznacza złą jakość, ale niski rozmiar pliku.</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1 oznacza najwyższą jakość/największy rozmiar plików, a 31 najniższą jakość/najmniejszy rozmiar plików.</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>Ten kodek audio nie jest obsługiwany przez wybrany kontener wideo.</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>Wartość domyślna to 128k.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>Zakres to 0-9, gdzie niższa wartość oznacza wyższą jakość. 0-3 zwykle daje przejrzyste wyniki, 4 (domyślnie) powinno być bliskie percepcyjnej przezroczystości, a 6 daje "akceptowalną" jakość.</value>
  </data>
  <data name="tbOpusBitrate.ToolTip" xml:space="preserve">
    <value>Wartość domyślna to 128k.</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>Zakres to 0–10, gdzie 10 to najwyższa jakość. 3–6 to dobry zakres do wypróbowania. Wartość domyślna to 3.</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>Domyślnie jest to full.</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>Domyślnie jest to sierra2_4a.</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>Użyj niestandardowej ścieżki</value>
  </data>
</root>