<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSelectHandle.Text" xml:space="preserve">
    <value>スクロール ウィンドウまたはコントロールを選択...</value>
  </data>
  <data name="btnCapture.Text" xml:space="preserve">
    <value>キャプチャー開始</value>
  </data>
  <data name="lblScrollDelay.Text" xml:space="preserve">
    <value>スクロール実行間隔 (ミリ秒):</value>
  </data>
  <data name="lblMaximumScrollCount.Text" xml:space="preserve">
    <value>最大スクロール回数:</value>
  </data>
  <data name="gbAfterCapture.Text" xml:space="preserve">
    <value>キャプチャー後</value>
  </data>
  <data name="lblScrollMethod.Text" xml:space="preserve">
    <value>スクロール方法:</value>
  </data>
  <data name="cbAutoDetectScrollEnd.Text" xml:space="preserve">
    <value>スクロールの終了を自動で検知する</value>
  </data>
  <data name="gbWhileCapturing.Text" xml:space="preserve">
    <value>キャプチャー中</value>
  </data>
  <data name="gbBeforeCapture.Text" xml:space="preserve">
    <value>キャプチャー前</value>
  </data>
  <data name="lblNote.Text" xml:space="preserve">
    <value>注意: ShareXは正確なスクロール キャプチャーの描画に最大限の努力をしますが、それでもなおすべてのスクロール内容を完全には再現できません。特に結合時に問題となるものとして、ウェブページにあるアニメーションGIFなどの動きのある物が、スクロール時に問題となるものとして、スクロールで移動しない固定されたメニューやボタンなどがあります。</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>キャプチャー</value>
  </data>
  <data name="tpOutput.Text" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="cbRemoveDuplicates.Text" xml:space="preserve">
    <value>重複画像を削除する</value>
  </data>
  <data name="cbAutoCombine.Text" xml:space="preserve">
    <value>キャプチャー後自動でオフセットを推測して結合する</value>
  </data>
  <data name="lblScrollTopMethodBeforeCapture.Text" xml:space="preserve">
    <value>キャプチャー前に最上部にスクロールする方法:</value>
  </data>
  <data name="lblStartDelay.Text" xml:space="preserve">
    <value>開始までの待ち時間 (ミリ秒):</value>
  </data>
  <data name="cbStartSelectionAutomatically.Text" xml:space="preserve">
    <value>このウィンドウを開く前に自動でキャプチャー領域選択を開始する</value>
  </data>
  <data name="cbStartCaptureAutomatically.Text" xml:space="preserve">
    <value>領域選択後すぐにスクロール キャプチャーを開始する</value>
  </data>
  <data name="btnSelectRectangle.Text" xml:space="preserve">
    <value>(オプション) ウィンドウ内の独自の領域を選択...</value>
  </data>
  <data name="gbImages.Text" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="lblImageCount.Text" xml:space="preserve">
    <value>画像数:</value>
  </data>
  <data name="lblIgnoreLast.Text" xml:space="preserve">
    <value>最後を削除:</value>
  </data>
  <data name="btnResetCombine.Text" xml:space="preserve">
    <value>出力オプションをリセットする</value>
  </data>
  <data name="btnGuessCombineAdjustments.Text" xml:space="preserve">
    <value>結合の調整量を推測して結合する</value>
  </data>
  <data name="btnStartTask.Text" xml:space="preserve">
    <value>キャプチャー後の設定にしたがい、アップロード/保存を実行する</value>
  </data>
  <data name="btnGuessEdges.Text" xml:space="preserve">
    <value>周囲のトリミング量を推測する</value>
  </data>
  <data name="gbCombineAdjustments.Text" xml:space="preserve">
    <value>結合の調整</value>
  </data>
  <data name="lblCombineLastVertical.Text" xml:space="preserve">
    <value>最後の縦 (px):</value>
  </data>
  <data name="lblCombineVertical.Text" xml:space="preserve">
    <value>縦 (px):</value>
  </data>
  <data name="gbTrimEdges.Text" xml:space="preserve">
    <value>周囲をトリミング</value>
  </data>
  <data name="lblTrimBottom.Text" xml:space="preserve">
    <value>下:</value>
  </data>
  <data name="lblTrimRight.Text" xml:space="preserve">
    <value>右:</value>
  </data>
  <data name="lblTrimTop.Text" xml:space="preserve">
    <value>上:</value>
  </data>
  <data name="lblTrimLeft.Text" xml:space="preserve">
    <value>左:</value>
  </data>
  <data name="lblProcessing.Text" xml:space="preserve">
    <value>処理しています...</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - スクロール キャプチャー</value>
  </data>
</root>