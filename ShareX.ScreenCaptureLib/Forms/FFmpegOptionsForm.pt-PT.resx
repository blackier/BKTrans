<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblx264CRF.Text" xml:space="preserve">
    <value>CRF:</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>Factor de taxa constante (CRF): O valor pode ser entre 0-51, em que 0 é sem perdas, 30 é padrão, e 51 é pior qualidade possível.

Um valor mais alto significa pior qualidade, mas com um tamanho de ficheiro menor.</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1 sendo melhor qualidade/tamanho maior e 31 sendo pior qualidade/tamanho menor.</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>Preset rápido = Rápida codificação mas maior tamanho de ficheiro.
Preset lento = Lenta codificação mas menos tamanho de ficheiro.
Para codificação em tempo real (e.x. captura de ecrã), o preset têm de ser o mais rápido possível.</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>Alcance entre 0-10, onde 10 é a melhor qualidade possível. 3-6 é um bom limite para experimentar. Por defeito é 3.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>Alcance entre 0-9, onde um número menor é igual a maior qualidade. 0-3 normalmente produz resultados transparentes, 4 (padrão) deve ser perto de transparência perceptível e 6 produz uma qualidade "aceitável".</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>Padrão é 128k</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>Padrão é cheio.</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>Padrão é sierra2_4a.</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>Este codec de aúdio não é suportado pelo recipiente de vídeo seleccionado.</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>Para codificação em tempo real como captura de ecrã é recomendado seleccionar um preset mais rápido possível.
Caso contrário é impossível acompanhar a gravação e irão ocorrer muitas falhas de imagem.</value>
  </data>
  <data name="tbOpusBitrate.ToolTip" xml:space="preserve">
    <value>Padrão é 128k.</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>Codec de vídeo:</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>Predefinição:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>Taxa de bitrate variável:</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>Transferir</value>
  </data>
  <data name="btnFFmpegBrowse.Text" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>Utilizar caminho personalizado</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>Utilizador comandos personalizados</value>
  </data>
  <data name="tpX264.Text" xml:space="preserve">
    <value>x264 / x265</value>
  </data>
  <data name="lblVP8BitrateK.Text" xml:space="preserve">
    <value>kbit/s</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>Taxa de bitrate variável:</value>
  </data>
  <data name="lblAMFQuality.Text" xml:space="preserve">
    <value>Qualidade:</value>
  </data>
  <data name="lblAMFUsage.Text" xml:space="preserve">
    <value>Utilização:</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Testar com linha de comandos</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>Copiar</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>Qualidade:</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>Qualidade:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>Fonte de vídeo:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>Fonte de áudio:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>Codec de áudio:</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>Instala fonte de vídeo/audio "screen-capture-recorder" e "virtual-audio-capturer".</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>Instalar dispositivos de gravação</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Opções de gravação do ecrã</value>
  </data>
</root>